{"version":3,"file":"gif.js","mappings":"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","sources":["webpack://gif.js.optimized2/webpack/universalModuleDefinition","webpack://gif.js.optimized2/./src/condition.js","webpack://gif.js.optimized2/./src/gif.js","webpack://gif.js.optimized2/./src/throttler.js","webpack://gif.js.optimized2/webpack/bootstrap","webpack://gif.js.optimized2/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","class Condition {\n  constructor() {\n    this.pending = [];\n    this.closed = false;\n    this.inErrorState = false;\n    this.error = null;\n  }\n\n  wait() {\n    if (this.inErrorState) return Promise.reject(this.error);\n    if (this.closed) return Promise.resolve(undefined);\n    return new Promise((resolve, reject) => {\n      this.pending.push({ resolve, reject });\n    });\n  }\n  notifyOne() {\n    if (this.pending.length > 0) this.pending.shift()?.resolve();\n  }\n  notifyAll() {\n    this.pending.forEach((p) => p.resolve());\n    this.pending = [];\n  }\n  rejectAll(error) {\n    this.inErrorState = true;\n    this.error = error;\n    this.pending.forEach((p) => p.reject(error));\n    this.pending = [];\n  }\n  close() {\n    this.notifyAll();\n    this.closed = true;\n  }\n}\n\nmodule.exports = Condition","const Throttler = require(\"./throttler\");\n\nconst defaultGifConfig = {\n  workerScript: \"gif.worker.js\",\n  workers: 2,\n  repeat: 0, // repeat forever, -1 = repeat once\n  background: \"#fff\",\n  quality: 10, // pixel sample interval, lower is better\n  width: null, // size derermined from first frame if possible\n  height: null,\n  transparent: null,\n  debug: false,\n};\n\nconst defaultFrameConfig = {\n  delay: 500,\n  copy: false,\n  applyCropOptimization: false,\n  transparencyDifferenceThreshold: 1,\n  applyTransparencyOptimization: false,\n  dispose: -1,\n  isLastFrame: false,\n};\n\n// To Do: Optimize previous frames, dispose unused memory.\nclass GIF {\n  constructor(options) {\n    this.freeWorkers = [];\n    this.activeWorkers = [];\n    this.gifConfig = { ...defaultGifConfig, ...options };\n    console.log(this.gifConfig);\n    // This can be more but we keep queue size fixed here so\n    // that we dont have to manage task queue.\n    this.queueSize = Math.max(this.gifConfig.workers, 1);\n    this.spawnWorkers();\n    this.frames = [];\n    this.previousFrames = [];\n    this.throttler = new Throttler(this.gifConfig.workers);\n    this.nextFrame = 0;\n    this.imageParts = [];\n  }\n\n  spawnWorkers() {\n    for (let i = 0; i < this.gifConfig.workers; i++) {\n      const worker = new Worker(this.gifConfig.workerScript);\n      const messageHandler = (event) => {\n        const index = this.activeWorkers.indexOf(worker);\n        if (index !== -1) {\n          this.activeWorkers.splice(index, 1);\n        }\n\n        this.freeWorkers.push(worker);\n        this.frameFinished(event.data);\n      };\n\n      worker.onmessage = messageHandler;\n      this.freeWorkers.push(worker);\n    }\n  }\n\n  async addFrame(image, options) {\n    let frame = { ...defaultFrameConfig, ...options };\n    let previousFrame = {};\n    frame.transparent = this.gifConfig.transparent;\n    await new Promise((resolve) => setTimeout(resolve, 100));\n\n    if (!this.gifConfig.width) {\n      this.gifConfig.width = image.width;\n    }\n    if (!this.gifConfig.height) {\n      this.gifConfig.height = image.height;\n    }\n\n    frame = this.getFrameData(image, frame, options);\n    if (this.gifConfig.applyTransparencyOptimization && options.previousImage) {\n      previousFrame = this.getFrameData(\n        options.previousImage,\n        previousFrame,\n        options\n      );\n    }\n\n    this.frames.push(frame);\n    if (previousFrame.data) {\n      this.previousFrames.push(previousFrame);\n    }\n\n    await this.throttler.wait();\n    this.render(frame, previousFrame, options.isLastFrame ?? false);\n  }\n\n  render(frame, previousFrame, isLastFrame = false) {\n    if (!this.gifConfig.width || !this.gifConfig.height) {\n      throw new Error(\"Width and height must be set prior to rendering\");\n    }\n\n    if (this.freeWorkers.length === 0) {\n      throw new Error(\"No workers available\");\n    }\n\n    this.imageParts.push(null);\n    const worker = this.freeWorkers.shift();\n    const task = this.getTask(this.nextFrame++, frame, previousFrame, isLastFrame);\n    this.activeWorkers.push(worker);\n    worker.postMessage(task);\n  }\n\n  abort() {\n    for (let i = 0; i < this.activeWorkers.length; i++) {\n      this.activeWorkers[i].terminate();\n    }\n  }\n\n  getTask(index, frame, previousFrame, isLastFrame) {\n    return {\n      index: index,\n      last: isLastFrame,\n      delay: frame.delay,\n      transparent: frame.transparent,\n      width: this.gifConfig.width,\n      height: this.gifConfig.height,\n      quality: this.gifConfig.quality,\n      dither: this.gifConfig.dither,\n      globalPalette: this.gifConfig.globalPalette,\n      repeat: this.gifConfig.repeat,\n      canTransfer: true,\n      data: this.getFrameDataForTask(frame),\n      applyCropOptimization: this.gifConfig.applyCropOptimization,\n      transparencyDifferenceThreshold:\n        this.gifConfig.transparencyDifferenceThreshold,\n      dispose: this.gifConfig.dispose,\n      applyTransparencyOptimization:\n        this.gifConfig.applyTransparencyOptimization,\n      previousFrameData: previousFrame\n        ? this.getFrameDataForTask(previousFrame)\n        : null,\n    };\n  }\n\n  getContextData(ctx) {\n    return ctx.getImageData(0, 0, this.gifConfig.width, this.gifConfig.height)\n      .data;\n  }\n\n  getFrameDataForTask(frame) {\n    if (frame.data) {\n      return frame.data;\n    } else if (frame.context) {\n      return this.getContextData(frame.context);\n    } else if (frame.image) {\n      return this.getImageData(frame.image);\n    } else {\n      throw new Error(\"Invalid frame\");\n    }\n  }\n\n  frameFinished(frame) {\n    if (this.imageParts[frame.index] !== null) {\n      return;\n    }\n\n    this.imageParts[frame.index] = frame;\n\n\n    if (this.gifConfig.options === true && !duplicate) {\n      this.gifConfig.globalPalette = frame.globalPalette;\n    }\n\n    this.throttler.notify();\n  }\n\n  async flush() {\n    await this.throttler.ensureEmpty();\n    var len = 0;\n    for (var frameIndex in this.imageParts) {\n      var frame = this.imageParts[frameIndex];\n      len += (frame.data.length - 1) * frame.pageSize + frame.cursor;\n    }\n    len += frame.pageSize - frame.cursor;\n\n    var data = new Uint8Array(len);\n    var offset = 0;\n    for (var frameIndex in this.imageParts) {\n      var frame = this.imageParts[frameIndex];\n      for (var i in frame.data) {\n        var page = frame.data[i];\n        data.set(page, offset);\n        if (i == frame.data.length - 1) {\n          offset += frame.cursor;\n        } else {\n          offset += frame.pageSize;\n        }\n      }\n    }\n\n    var image = new Blob([data], { type: \"image/gif\" });\n    return image;\n  }\n\n  getFrameData(image, frame, options = {}) {\n    if (typeof ImageData !== \"undefined\" && image instanceof ImageData) {\n      frame.data = image.data;\n    } else if (\n      (typeof CanvasRenderingContext2D !== \"undefined\" &&\n        image instanceof CanvasRenderingContext2D) ||\n      (typeof WebGLRenderingContext !== \"undefined\" &&\n        image instanceof WebGLRenderingContext)\n    ) {\n      if (options.copy) {\n        frame.data = this.getContextData(image);\n      } else {\n        frame.context = image;\n      }\n    } else if (image.childNodes) {\n      if (options.copy) {\n        frame.data = this.getImageData(image);\n      } else {\n        frame.image = image;\n      }\n    } else {\n      throw new Error(\"Invalid image\");\n    }\n    return frame;\n  }\n\n  getImageData(image) {\n    if (!this._canvas) {\n      this._canvas = document.createElement(\"canvas\");\n      this._canvas.width = this.gifConfig.width;\n      this._canvas.height = this.gifConfig.height;\n    }\n\n    var ctx = this._canvas.getContext(\"2d\");\n    ctx.setFill = this.gifConfig.background;\n    ctx.fillRect(0, 0, this.gifConfig.width, this.gifConfig.height);\n    ctx.drawImage(image, 0, 0);\n\n    return this.getContextData(ctx);\n  }\n}\n\nmodule.exports = GIF;\n","var Condition = require('./condition');\n\nclass Throttler {\n  constructor(maxPending) {\n    this.maxPending = maxPending;\n    this.pendingCount = 0;\n    this.full = new Condition();\n  }\n\n  async wait() {\n    while (this.pendingCount >= this.maxPending) {\n      await this.full.wait();\n    }\n    this.pendingCount++;\n  }\n\n  async ensureEmpty() {\n    while (this.pendingCount != 0) {\n      await this.full.wait();\n    }\n  }\n\n  notify() {\n    this.pendingCount--;\n    this.full.notifyOne();\n  }\n}\n\nmodule.exports = Throttler;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(503);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","constructor","this","pending","closed","inErrorState","error","wait","Promise","reject","resolve","undefined","push","notifyOne","length","shift","notifyAll","forEach","p","rejectAll","close","Throttler","require","defaultGifConfig","workerScript","workers","repeat","background","quality","width","height","transparent","debug","defaultFrameConfig","delay","copy","applyCropOptimization","transparencyDifferenceThreshold","applyTransparencyOptimization","dispose","isLastFrame","options","freeWorkers","activeWorkers","gifConfig","console","log","queueSize","Math","max","spawnWorkers","frames","previousFrames","throttler","nextFrame","imageParts","worker","Worker","messageHandler","event","index","indexOf","splice","frameFinished","data","onmessage","async","image","frame","previousFrame","setTimeout","getFrameData","previousImage","render","Error","task","getTask","postMessage","abort","terminate","last","dither","globalPalette","canTransfer","getFrameDataForTask","previousFrameData","getContextData","ctx","getImageData","context","duplicate","notify","ensureEmpty","len","frameIndex","pageSize","cursor","Uint8Array","offset","page","set","Blob","type","ImageData","CanvasRenderingContext2D","WebGLRenderingContext","childNodes","_canvas","document","createElement","getContext","setFill","fillRect","drawImage","Condition","maxPending","pendingCount","full","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}