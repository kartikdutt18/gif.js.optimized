{"version":3,"file":"gif.js","mappings":"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","sources":["webpack://gif.js.optimized2/webpack/universalModuleDefinition","webpack://gif.js.optimized2/./src/condition.js","webpack://gif.js.optimized2/./src/gif.js","webpack://gif.js.optimized2/./src/throttler.js","webpack://gif.js.optimized2/webpack/bootstrap","webpack://gif.js.optimized2/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","class Condition {\n  constructor() {\n    this.pending = 0;\n    this.closed = false;\n    this.inErrorState = false;\n    this.error = null;\n  }\n\n  wait() {\n    if (this.inErrorState) return Promise.reject(this.error);\n    if (this.closed) return Promise.resolve(undefined);\n    return new Promise((resolve, reject) => {\n      this.pending.push({ resolve, reject });\n    });\n  }\n  notifyOne() {\n    if (this.pending.length > 0) this.pending.shift()?.resolve();\n  }\n  notifyAll() {\n    this.pending.forEach((p) => p.resolve());\n    this.pending = [];\n  }\n  rejectAll(error) {\n    this.inErrorState = true;\n    this.error = error;\n    this.pending.forEach((p) => p.reject(error));\n    this.pending = [];\n  }\n  close() {\n    this.notifyAll();\n    this.closed = true;\n  }\n}\n\nmodule.exports = Condition","const Throttler = require(\"./throttler\");\n\nconst defaultGifConfig = {\n  workerScript: \"gif.worker.js\",\n  workers: 2,\n  repeat: 0, // repeat forever, -1 = repeat once\n  background: \"#fff\",\n  quality: 10, // pixel sample interval, lower is better\n  width: null, // size derermined from first frame if possible\n  height: null,\n  transparent: null,\n  debug: false,\n};\n\nconst defaultFrameConfig = {\n  delay: 500,\n  copy: false,\n  applyCropOptimization: false,\n  transparencyDifferenceThreshold: 1,\n  applyTransparencyOptimization: false,\n  dispose: -1,\n  isLastFrame: false,\n};\n\n// To Do: Optimize groups. Optimize previous frames, dispose unused memory.\nclass GIF {\n  constructor(options) {\n    this.freeWorkers = [];\n    this.activeWorkers = [];\n    this.gifConfig = { ...defaultGifConfig, ...options };\n    console.log(this.gifConfig);\n    // This can be more but we keep queue size fixed here so\n    // that we dont have to manage task queue.\n    this.queueSize = Math.max(this.gifConfig.workers, 1);\n    this.spawnWorkers();\n    this.frames = [];\n    this.previousFrames = [];\n    this.groups = new Map();\n    this.throttler = new Throttler(this.gifConfig.workers);\n    this.nextFrame = 0;\n    this.imageParts = [];\n  }\n\n  spawnWorkers() {\n    for (let i = 0; i < this.gifConfig.workers; i++) {\n      const worker = new Worker(this.gifConfig.workerScript);\n      worker.onmessage = (event) => {\n        this.activeWorkers.splice(this.activeWorkers.indexOf(worker));\n        this.freeWorkers.push(worker);\n        this.frameFinished(event.data, false);\n      };\n      this.freeWorkers.push(worker);\n    }\n  }\n\n  async addFrame(image, options) {\n    let frame = { ...defaultFrameConfig, ...options };\n    let previousFrame = {};\n    frame.transparent = this.gifConfig.transparent;\n    await new Promise((resolve) => setTimeout(resolve, 100));\n\n    if (!this.gifConfig.width) {\n      this.gifConfig.width = image.width;\n    }\n    if (!this.gifConfig.height) {\n      this.gifConfig.height = image.height;\n    }\n\n    frame = this.getFrameData(image, frame, options);\n    if (this.gifConfig.applyTransparencyOptimization && options.previousImage) {\n      previousFrame = this.getFrameData(options.previousImage, previousFrame, options);\n    }\n\n    console.log(\"HERE\")\n\n    let index = this.frames.length;\n    if (index > 0 && frame.data) {\n      if (this.groups.has(frame.data)) {\n        this.groups.get(frame.data).push(index);\n      } else {\n        this.groups.set(frame.data, index);\n      }\n    }\n\n    this.frames.push(frame);\n    if (previousFrame.data) {\n      this.previousFrames.push(previousFrame);\n    }\n\n    await this.throttler.wait();\n    this.render();\n  }\n\n  render(isLastFrame = false) {\n    if (this.nextFrame > this.frames.length) {\n      // No frame to render.\n      return;\n    }\n\n    if (!this.gifConfig.width || !this.gifConfig.height) {\n      throw new Error(\"Width and height must be set prior to rendering\");\n    }\n\n    if (this.freeWorkers.length === 0) {\n      throw new Error(\"No workers available\");\n    }\n\n    let index = this.nextFrame;\n    let frame = this.frames[index];\n    this.imageParts.push(null)\n    let previousFrame = null;\n    if (this.previousFrames.length > (index - 1))\n      previousFrame = this.previousFrames[index - 1];\n    this.nextFrame++;\n\n    if (\n      index > 0 &&\n      this.groups.has(frame.data) &&\n      this.groups.get(frame.data)[0] != index\n    ) {\n      return this.frameFinished(frame, true);\n    }\n\n    const worker = this.freeWorkers.shift();\n    const task = this.getTask(index, frame, previousFrame, isLastFrame);\n    this.activeWorkers.push(worker);\n    worker.postMessage(task);\n  }\n\n  abort() {\n    for (let i = 0; i < this.activeWorkers.length; i++) {\n      this.activeWorkers[i].terminate();\n    }\n  }\n\n  getTask(index, frame, previousFrame, isLastFrame) {\n    return {\n      index: index,\n      last: isLastFrame,\n      delay: frame.delay,\n      transparent: frame.transparent,\n      width: this.gifConfig.width,\n      height: this.gifConfig.height,\n      quality: this.gifConfig.quality,\n      dither: this.gifConfig.dither,\n      globalPalette: this.gifConfig.globalPalette,\n      repeat: this.gifConfig.repeat,\n      canTransfer: true,\n      data: this.getFrameDataForTask(frame),\n      applyCropOptimization: this.gifConfig.applyCropOptimization,\n      transparencyDifferenceThreshold:\n        this.gifConfig.transparencyDifferenceThreshold,\n      dispose: this.gifConfig.dispose,\n      applyTransparencyOptimization:\n        this.gifConfig.applyTransparencyOptimization,\n      previousFrameData: previousFrame\n        ? this.getFrameDataForTask(previousFrame)\n        : null,\n    };\n  }\n\n  getContextData(ctx) {\n    return ctx.getImageData(0, 0, this.gifConfig.width, this.gifConfig.height)\n      .data;\n  }\n\n  getFrameDataForTask(frame) {\n    if (frame.data) {\n      return frame.data;\n    } else if (frame.context) {\n      return this.getContextData(frame.context);\n    } else if (frame.image) {\n      return this.getImageData(frame.image);\n    } else {\n      throw new Error(\"Invalid frame\");\n    }\n  }\n\n  frameFinished(frame, duplicate) {\n    if (!duplicate) {\n      this.imageParts[frame.index] = frame;\n    } else {\n      let indexOfFirstInGroup = this.groups.get(frame.data)[0];\n      this.imageParts[frame.index] = {\n        indexOfFirstInGroup: indexOfFirstInGroup,\n      };\n    }\n\n    if (this.gifConfig.options === true && !duplicate) {\n      this.gifConfig.globalPalette = frame.globalPalette;\n    }\n\n    this.throttler.notify();\n  }\n\n  async flush() {\n    await this.throttler.wait();\n    for (var index in this.imageParts) {\n      var frame = this.imageParts[index];\n      if (frame.indexOfFirstInGroup) {\n        this.imageParts[index] = this.imageParts[frame.indexOfFirstInGroup];\n      }\n    }\n\n    var len = 0;\n    for (var frameIndex in this.imageParts) {\n      var frame = this.imageParts[frameIndex];\n      len += (frame.data.length - 1) * frame.pageSize + frame.cursor;\n    }\n    len += frame.pageSize - frame.cursor;\n\n    var data = new Uint8Array(len);\n    var offset = 0;\n    for (var frameIndex in this.imageParts) {\n      var frame = this.imageParts[frameIndex];\n      for (var i in frame.data) {\n        var page = frame.data[i];\n        data.set(page, offset);\n        if (i == frame.data.length - 1) {\n          offset += frame.cursor;\n        } else {\n          offset += frame.pageSize;\n        }\n      }\n    }\n\n    var image = new Blob([data], { type: \"image/gif\" });\n    return image;\n  }\n\n  getFrameData(image, frame, options = {}) {\n    if (typeof ImageData !== \"undefined\" && image instanceof ImageData) {\n      frame.data = image.data;\n    } else if (\n      (typeof CanvasRenderingContext2D !== \"undefined\" &&\n        image instanceof CanvasRenderingContext2D) ||\n      (typeof WebGLRenderingContext !== \"undefined\" &&\n        image instanceof WebGLRenderingContext)\n    ) {\n      if (options.copy) {\n        frame.data = this.getContextData(image);\n      } else {\n        frame.context = image;\n      }\n    } else if (image.childNodes) {\n      if (options.copy) {\n        frame.data = this.getImageData(image);\n      } else {\n        frame.image = image;\n      }\n    } else {\n      throw new Error(\"Invalid image\");\n    }\n    return frame;\n  }\n\n  getImageData(image) {\n    if (!this._canvas) {\n      this._canvas = document.createElement(\"canvas\");\n      this._canvas.width = this.gifConfig.width;\n      this._canvas.height = this.gifConfig.height;\n    }\n\n    var ctx = this._canvas.getContext(\"2d\");\n    ctx.setFill = this.gifConfig.background;\n    ctx.fillRect(0, 0, this.gifConfig.width, this.gifConfig.height);\n    ctx.drawImage(image, 0, 0);\n\n    return this.getContextData(ctx);\n  }\n}\n\nmodule.exports = GIF;\n","var Condition = require('./condition');\n\nclass Throttler {\n  constructor(maxPending) {\n    this.maxPending = maxPending;\n    this.pendingCount = 0;\n    this.full = new Condition();\n  }\n\n  async wait() {\n    while (this.pendingCount >= this.maxPending) {\n      await this.full.wait();\n    }\n    this.pendingCount++;\n  }\n\n  notify() {\n    this.pendingCount--;\n    this.full.notifyOne();\n  }\n}\n\nmodule.exports = Throttler;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(503);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","constructor","this","pending","closed","inErrorState","error","wait","Promise","reject","resolve","undefined","push","notifyOne","length","shift","notifyAll","forEach","p","rejectAll","close","Throttler","require","defaultGifConfig","workerScript","workers","repeat","background","quality","width","height","transparent","debug","defaultFrameConfig","delay","copy","applyCropOptimization","transparencyDifferenceThreshold","applyTransparencyOptimization","dispose","isLastFrame","options","freeWorkers","activeWorkers","gifConfig","console","log","queueSize","Math","max","spawnWorkers","frames","previousFrames","groups","Map","throttler","nextFrame","imageParts","worker","Worker","onmessage","event","splice","indexOf","frameFinished","data","async","image","frame","previousFrame","setTimeout","getFrameData","previousImage","index","has","get","set","render","Error","task","getTask","postMessage","abort","terminate","last","dither","globalPalette","canTransfer","getFrameDataForTask","previousFrameData","getContextData","ctx","getImageData","context","duplicate","indexOfFirstInGroup","notify","len","frameIndex","pageSize","cursor","Uint8Array","offset","page","Blob","type","ImageData","CanvasRenderingContext2D","WebGLRenderingContext","childNodes","_canvas","document","createElement","getContext","setFill","fillRect","drawImage","Condition","maxPending","pendingCount","full","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}